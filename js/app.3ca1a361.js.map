{"version":3,"file":"js/app.3ca1a361.js","mappings":"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","sources":["webpack://tronbox/./src/App.vue","webpack://tronbox/./src/components/tron-box/tron-box.vue","webpack://tronbox/./src/components/tron-box/tron/models/Grid.Extensions.js","webpack://tronbox/./src/components/tron-box/tron/Renderer.js","webpack://tronbox/./src/components/tron-box/tron/models/Point.js","webpack://tronbox/./src/components/tron-box/tron/models/Constants.js","webpack://tronbox/./src/components/tron-box/tron/models/Trail.js","webpack://tronbox/./src/components/tron-box/tron/models/ColorExtensions.js","webpack://tronbox/./src/components/tron-box/tron/models/TrailMoveValidator.js","webpack://tronbox/./src/components/tron-box/tron/Engine.js","webpack://tronbox/./src/components/tron-box/tron/ai/clockwise.ai.js","webpack://tronbox/./src/components/tron-box/tron/ai/minimax.ai.js","webpack://tronbox/./src/components/tron-box/tron-box.vue?f7e1","webpack://tronbox/./src/App.vue?7ccd","webpack://tronbox/./src/main.js","webpack://tronbox/webpack/bootstrap","webpack://tronbox/webpack/runtime/chunk loaded","webpack://tronbox/webpack/runtime/compat get default export","webpack://tronbox/webpack/runtime/define property getters","webpack://tronbox/webpack/runtime/global","webpack://tronbox/webpack/runtime/hasOwnProperty shorthand","webpack://tronbox/webpack/runtime/make namespace object","webpack://tronbox/webpack/runtime/jsonp chunk loading","webpack://tronbox/webpack/startup"],"sourcesContent":["<template>\n  <TronBox canvas-id=\"grid\" />\n</template>\n\n<script>\nimport TronBox from \"./components/tron-box/tron-box.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    TronBox\n  },\n};\n</script>\n\n<style>\n</style>\n","<template>\r\n  <div class=\"grid-box\">\r\n    <div class=\"header\">\r\n      <h1>Tron Battle Bots</h1>\r\n    </div>\r\n    <div class=\"flex-box-row\">\r\n      <div class=\"flex-box-row no-gap\">\r\n        <div>\r\n          <p class=\"tip\">\r\n            Press 'a' or 'b' on the keyboard to place a bot at your mouse\r\n            position!\r\n          </p>\r\n          <!-- Canvas will default to 300 x 150 if width and height aren't manually set -->\r\n          <canvas\r\n            :id=\"canvasId\"\r\n            ref=\"canvas\"\r\n            width=\"500\"\r\n            class=\"canvas-style\"\r\n            height=\"500\"\r\n            @mousemove=\"mouseMove\"\r\n            @mouseenter=\"canvasMouseEnter\"\r\n            @mouseleave=\"canvasMouseLeave\"\r\n          />\r\n        </div>\r\n        <div class=\"winner-box\">\r\n          <h2>Points:</h2>\r\n          <ol v-if=\"showWinnerText\">\r\n            <li v-for=\"winner in engine.winners\" :key=\"winner.id\">\r\n              <b :style=\"`color: ${winner.color}`\">TRAIL [{{ winner.id }}]</b>\r\n              - POINTS: {{ winner.points }}\r\n            </li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div class=\"editor\">\r\n        <div class=\"controls\">\r\n          <div class=\"multi-control\">\r\n            <button class=\"btn btn-dark\" @click=\"addBot(botA)\">ADD [A]</button>\r\n            <input id=\"colorPickerA\" v-model=\"botA.color\" type=\"color\" />\r\n            <input v-model=\"botA.posTxt\" type=\"text\" class=\"pos-input\" />\r\n          </div>\r\n          <div class=\"multi-control\">\r\n            <button class=\"btn btn-dark\" @click=\"addBot(botB)\">ADD [B]</button>\r\n            <input id=\"colorPickerB\" v-model=\"botB.color\" type=\"color\" />\r\n            <input v-model=\"botB.posTxt\" type=\"text\" class=\"pos-input\" />\r\n          </div>\r\n          <button class=\"btn btn-dark\" @click=\"clear\">CLEAR</button>\r\n          <button class=\"btn btn-dark\" @click=\"randomizeBots\">RANDOM</button>\r\n          <button class=\"btn btn-dark\" @click=\"togglePause\">{{ pauseBtnText }}</button>\r\n          <button class=\"btn btn-dark\" @click=\"step\">STEP</button>\r\n          <button class=\"btn btn-dark\" @click=\"benchmark\">BENCHMARK</button>\r\n        </div>\r\n\r\n        <div>\r\n          <h6>BOT A:</h6>\r\n          <textarea v-model=\"botA.js\" class=\"code-area\" :style=\"`border-color: ${botA.color}`\"></textarea>\r\n        </div>\r\n        <div>\r\n          <h6>BOT B:</h6>\r\n          <textarea v-model=\"botB.js\" class=\"code-area\" :style=\"`border-color: ${botB.color}`\"></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Renderer } from \"./tron/Renderer\";\r\nimport { Engine } from \"./tron/Engine\";\r\nimport clockwiseExampleAi from \"raw-loader!./tron/ai/clockwise.ai.js\"; /* Load the raw JS as a string */\r\nimport counterclockwiseExampleAi from \"raw-loader!./tron/ai/counterclockwise.ai.js\"; /* Load the raw JS as a string */\r\nimport minimax from \"raw-loader!./tron/ai/minimax.ai.js\";\r\nimport { ColorExtensions } from \"./tron/models/ColorExtensions\";\r\nimport { Point } from \"./tron/models/Point\";\r\n\r\nexport default {\r\n  name: \"TronBox\",\r\n  props: {\r\n    canvasId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n  data: () => ({\r\n    botA: {\r\n      js: minimax,\r\n      color: \"#FF0000\",\r\n      prevColor: \"#FF0000\",\r\n      posTxt: \"2,7\",\r\n      id: \"A\"\r\n    },\r\n    botB: {\r\n      js: clockwiseExampleAi,\r\n      color: \"#0000FF\",\r\n      prevColor: \"#0000FF\",\r\n      posTxt: \"7,9\",\r\n      id: \"B\"\r\n    },\r\n    renderer: undefined,\r\n    engine: undefined,\r\n    paused: true,\r\n    mousePos: { x: 0, y: 0 },\r\n    mouseIsOnCanvas: false,\r\n    lastKeyPressed: undefined\r\n  }),\r\n  computed: {\r\n    pauseBtnText: function () {\r\n      return this.paused ? \"PLAY\" : \"PAUSE\";\r\n    },\r\n    showWinnerText: function () {\r\n      return this.engine?.winners?.length > 0;\r\n    }\r\n  },\r\n  mounted() {\r\n    window.addEventListener(\"keydown\", this.keyDown);\r\n    window.addEventListener(\"keyup\", this.keyUp);\r\n    this.renderer = new Renderer(this.canvasId);\r\n    this.engine = new Engine();\r\n    this.start();\r\n  },\r\n  methods: {\r\n    convertPosTxtToPoint(posTxt) {\r\n      let [m, x, y] = posTxt.match(/(\\d+),(\\d+)/);\r\n      return new Point(x, y);\r\n    },\r\n    addBot(bot, pos) {\r\n      let getMove = this.engine.parseRawJsIntoGetMoveFunction(bot.js);\r\n      pos = pos || this.convertPosTxtToPoint(bot.posTxt);\r\n      this.engine.addTrail(getMove, bot.id, bot.color, pos);\r\n    },\r\n    clear() {\r\n      this.engine.reset();\r\n      this.renderer.reset();\r\n    },\r\n    step() {\r\n      this.engine.step();\r\n    },\r\n    randomizeBots() {\r\n      this.clear();\r\n      this.randomizeBot(this.botA);\r\n      this.randomizeBot(this.botB);\r\n      this.addInitialTrails();\r\n    },\r\n    randomizeBot(bot) {\r\n      //bot.prevColor = bot.color;\r\n      //bot.color = ColorExtensions.getRandomColorHex();\r\n\r\n      let rndNum = () => Math.floor(Math.random() * 10);\r\n      bot.posTxt = rndNum() + \",\" + rndNum();\r\n    },\r\n    addInitialTrails() {\r\n      this.addBot(this.botA);\r\n      this.addBot(this.botB);\r\n    },\r\n    start() {\r\n      this.addInitialTrails();\r\n      this.loop();\r\n    },\r\n    togglePause() {\r\n      this.paused = !this.paused;\r\n    },\r\n    canvasMouseEnter() {\r\n      this.mouseIsOnCanvas = true;\r\n    },\r\n    canvasMouseLeave() {\r\n      this.mouseIsOnCanvas = false;\r\n    },\r\n    addBotAtMousePos(bot) {\r\n      if (!this.mouseIsOnCanvas) {\r\n        return;\r\n      }\r\n\r\n      var gridPos = this.renderer.convertMousePosToGridPos(this.mousePos);\r\n      if (!gridPos || Grid.isOccupied(this.engine.grid, gridPos)) {\r\n        return;\r\n      }\r\n\r\n      this.addBot(bot, gridPos);\r\n    },\r\n    keyDown(keyEvent) {\r\n      // Prevent multiple events when holding down a key:\r\n      if (this.lastKeyPressed == keyEvent.key) {\r\n        return;\r\n      }\r\n      this.lastKeyPressed = keyEvent.key;\r\n      if (keyEvent.key == \"a\") {\r\n        this.addBotAtMousePos(this.botA);\r\n      } else if (keyEvent.key == \"b\") {\r\n        this.addBotAtMousePos(this.botB);\r\n      }\r\n    },\r\n    keyUp(keyEvent) {\r\n      this.lastKeyPressed = undefined;\r\n    },\r\n    mouseMove(event) {\r\n      var rect = this.$refs.canvas.getBoundingClientRect();\r\n      this.mousePos = {\r\n        x: Math.floor(event.clientX - rect.left),\r\n        y: Math.floor(event.clientY - rect.top),\r\n      };\r\n    },\r\n    loop() {\r\n      if (!this.paused) {\r\n        this.engine.step();\r\n      }\r\n      this.renderer.render(this.engine);\r\n      setTimeout(this.loop, 50);\r\n    },\r\n    async benchmark() {\r\n      if (!window.BENCHMARK_MAX_ITERATIONS) {\r\n        window.BENCHMARK_MAX_ITERATIONS = 100;\r\n      }\r\n      let maxIterations = window.BENCHMARK_MAX_ITERATIONS;\r\n      let pointMap = new Map();\r\n      for (let i = 1; i <= maxIterations; i++) {\r\n        this.randomizeBots();\r\n        this.engine.debug = false;\r\n\r\n        // flip bot starting order every iteration:\r\n        let tempBot = this.botA;\r\n        this.botA = this.botB;\r\n        this.botB = tempBot;\r\n\r\n        while (!this.engine.expired) {\r\n          await new Promise(resolve => {\r\n            this.engine.step();\r\n            resolve();\r\n          });\r\n        }\r\n        let winners = this.engine.winners\r\n          .filter(x => x.points == this.engine.winners[0].points);\r\n        for (let winner of winners) {\r\n          if (!pointMap.has(winner.id)) {\r\n            pointMap.set(winner.id, {\r\n              ...winner,\r\n              wins: 0\r\n            });\r\n          }\r\n          if (winners.length == 1)\r\n            pointMap.get(winner.id).wins++;\r\n        }\r\n        console.log(`Running iteration ${i}/${maxIterations}`);\r\n      }\r\n      console.log(\"=================\");\r\n      console.log(\"BENCHMARK RESULTS:\");\r\n      // console.log(pointMap); // <-- Full data (works for > 2 bots);\r\n      let winsA = pointMap.get(this.botA.id).wins;\r\n      let winsB = pointMap.get(this.botB.id).wins;\r\n      let winsApercent = (winsA / maxIterations * 100).toFixed(1);\r\n      let winsBpercent = (winsB / maxIterations * 100).toFixed(1);\r\n      console.log(`Bot A wins: ${winsA}/${maxIterations} (${winsApercent}%)`);\r\n      console.log(`Bot B wins: ${winsB}/${maxIterations} (${winsBpercent}%)`);\r\n      console.log(\"      Ties: \", maxIterations - (winsA + winsB));\r\n\r\n      this.engine.debug = true;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.tip {\r\n  font-style: italic;\r\n  color: #999;\r\n}\r\n\r\n.winner-box {\r\n  width: 250px;\r\n}\r\n\r\n.canvas-style {\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  display: block;\r\n  margin: auto;\r\n  box-shadow: 0 0 18px 5px black;\r\n}\r\n\r\n.editor > div {\r\n  width: 100%;\r\n}\r\n\r\n.editor {\r\n  min-width: 700px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: baseline;\r\n  gap: 25px;\r\n\r\n  .controls {\r\n    text-align: left;\r\n    padding-bottom: 5px;\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: flex-start;\r\n\r\n    .multi-control {\r\n      display: inline-flex;\r\n      flex-direction: column;\r\n      align-items: baseline;\r\n      gap: 5px;\r\n\r\n      * {\r\n        width: 100%;\r\n      }\r\n\r\n      .pos-input {\r\n        max-width: 85px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.flex-box-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 50px;\r\n}\r\n\r\n.no-gap {\r\n  gap: 0px;\r\n}\r\n\r\n.flex-box-col {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 50px;\r\n}\r\n\r\n.grid-box {\r\n  padding: 50px;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 100px 1fr;\r\n  column-gap: 10px;\r\n}\r\n\r\n.header {\r\n  grid-column: 1 / 3;\r\n}\r\n\r\n.code-area {\r\n  width: 100%;\r\n  min-height: 600px;\r\n  font-family: \"Courier New\", Courier, monospace;\r\n  font-size: small;\r\n  border: 3px solid #fff;\r\n}\r\n\r\n/* width */\r\n.code-area::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n.code-area::-webkit-scrollbar-track {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n/* Fix scrollbar cursor bug: */\r\ntextarea {\r\n  cursor: auto;\r\n}\r\n\r\n/* Handle */\r\n.code-area::-webkit-scrollbar-thumb {\r\n  background-color: rgb(0, 129, 32);\r\n}\r\n/* Handle on hover */\r\n.code-area::-webkit-scrollbar-thumb:hover {\r\n  background: rgb(2, 80, 32);\r\n}\r\n</style>\r\n","import { Point } from \"paper/dist/paper-core\";\r\n\r\nexport class Grid {\r\n    constructor() { }\r\n\r\n    static isOccupied(grid, pos) {\r\n        if (!grid || !grid.length || !grid[0].length) {\r\n            return;\r\n        }\r\n        if (pos.x >= grid.length || pos.x < 0 || pos.y < 0 || !grid[pos.x] || pos.y >= grid[pos.x].length) {\r\n            return;\r\n        }\r\n        if (grid[pos.x][pos.y] != undefined) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static flatten(grid) {\r\n        return grid\r\n            .map((col, x) => col.map((cell, y) => {\r\n                return {\r\n                    position: new Point(x, y),\r\n                    id: cell\r\n                };\r\n            }))\r\n            .flatMap(x => x);\r\n    }\r\n\r\n    static setOwner(grid, pos, id) {\r\n        if (!grid || !grid.length || !grid[0].length) {\r\n            return;\r\n        }\r\n        if (pos.x >= grid.length || pos.x < 0 || pos.y < 0 || !grid[pos.x] || pos.y >= grid[pos.x].length) {\r\n            return;\r\n        }\r\n\r\n        grid[pos.x][pos.y] = id;\r\n    }\r\n\r\n    static getRandomValidPos(grid) {\r\n        var openSpots = Grid\r\n            .flatten(grid)\r\n            .filter(x => !Grid.isOccupied(grid, x.position));\r\n\r\n        if (openSpots.length < 1) {\r\n            console.log(\"No open spots to spawn in a tron bike!\");\r\n            return;\r\n        }\r\n        var pos = openSpots[Math.floor(Math.random() * openSpots.length)].gridPosition;\r\n        return pos;\r\n    }\r\n\r\n    static copy(grid) {\r\n        let copy = grid.map(col => [...col]);\r\n        return copy;\r\n    }\r\n}","import { Point } from \"paper/dist/paper-core\";\r\nimport { Grid } from \"./models/Grid.Extensions\";\r\n\r\nconst paper = require('paper');\r\n\r\nexport class Renderer {\r\n  constructor(canvasId) {\r\n    this.canvasId = canvasId;\r\n    this.reset();\r\n  };\r\n\r\n  reset() {\r\n    paper.project?.activeLayer?.removeChildren();\r\n    /* \r\n      Vue.js doesn't reset global paper object\r\n      when app re-compiles during development.\r\n      This leads to bugs and \"memory-leaks\".\r\n      This is the best solution I can come up with:\r\n    */\r\n    paper.projects.forEach(project => {\r\n      // console.log(\"Unexpected project found. Removing...\");\r\n      project.remove();\r\n    });\r\n    paper.setup(this.canvasId);\r\n\r\n    this.grid = undefined;\r\n    this.trailStuff = {};\r\n    this.colors = [\"#A72334\", \"#FC7A43\", \"#ECCF39\", \"#6FAF60\",\r\n      \"#02654B\", \"#188DBF\", \"#22379B\", \"#7209b7\",\r\n      \"#f72585\"];\r\n    this.colorIndex = 0;\r\n  }\r\n\r\n  convertMousePosToGridPos(mousePos) {\r\n    if (!this.grid) {\r\n      return;\r\n    }\r\n\r\n    var intersectingCell = this.grid\r\n      .map((col, x) => col.map((cell, y) => {\r\n        cell.gridPosition = new Point(x, y);\r\n        return cell;\r\n      }))\r\n      .flatMap(cell => cell)\r\n      .find(x => x.hitTest(new Point(mousePos.x, mousePos.y)));\r\n\r\n    if (intersectingCell) {\r\n      return intersectingCell.gridPosition;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  render(engine) {\r\n    let grid = engine.grid;\r\n    let trails = engine.trails;\r\n    if (grid.expired) {\r\n      return;\r\n    }\r\n\r\n    if (this.grid === undefined) {\r\n      var cellWidth = 50;\r\n\r\n      this.grid = grid.map((col, x) =>\r\n        col.map((el, y) => {\r\n          var cell = new paper.Path.Rectangle(\r\n            new paper.Point(x * cellWidth, y * cellWidth),\r\n            new paper.Size(cellWidth, cellWidth)\r\n          );\r\n          cell.strokeColor = \"#444\"; // #290\r\n          cell.fillColor = \"#090909\";\r\n          return cell;\r\n        })\r\n      );\r\n    }\r\n    for (let trail of trails) {\r\n      if (!this.trailStuff[trail.id]) {\r\n        this.trailStuff[trail.id] = {};\r\n      }\r\n      let trailStuff = this.trailStuff[trail.id];\r\n      for (let point of trail.tail) {\r\n        let trailCell = this.grid[point.x][point.y];\r\n        trailCell.fillColor = trail.color;\r\n        trailCell.strokeWidth = 1;\r\n        trailCell.shadowColor = \"#000\";\r\n        trailCell.shadowBlur = 10;\r\n      }\r\n\r\n      if (!trailStuff.wireframe) {\r\n        trailStuff.wireframe = new paper.Path(\r\n          [...trail.tail, trail.head].map(x => this.grid[x.x][x.y].position)\r\n        );\r\n        trailStuff.wireframe.strokeColor = new paper.Color(0, 0, 0, 0.25);\r\n        trailStuff.wireframe.strokeWidth = 5;\r\n      }\r\n      if (trailStuff.wireframe.segments.at(-1).x != trail.head.x\r\n        && trailStuff.wireframe.segments.at(-1).y != trail.head.y) {\r\n        trailStuff.wireframe.add(this.grid[trail.head.x][trail.head.y].position);\r\n      }\r\n\r\n      let headCell = this.grid[trail.head.x][trail.head.y];\r\n      headCell.strokeColor = trail.color;\r\n      headCell.fillColor = trail.color;\r\n      headCell.strokeWidth = 10;\r\n      headCell.shadowColor = \"#000\";\r\n      headCell.shadowBlur = 20;\r\n      headCell.bringToFront();\r\n\r\n      let headIndicator = trailStuff.headIndicator;\r\n      if (!headIndicator) {\r\n        headIndicator = new paper.Path.Circle(headCell.position, 15);\r\n        headIndicator.fillColor = trail.color;\r\n        headIndicator.strokeColor = \"#FFF\";\r\n        headIndicator.strokeWidth = 10;\r\n        trailStuff.headIndicator = headIndicator;\r\n      }\r\n      if (!trail.alive && !trailStuff.deadSymbolHead) {\r\n        headIndicator.remove();\r\n        let triangle = new paper.Path.RegularPolygon(headCell.position, 3, 25);\r\n        triangle.fillColor = '#000';\r\n        triangle.position = headCell.position;\r\n        trailStuff.deadSymbolHead = triangle;\r\n      }\r\n\r\n      trailStuff.wireframe.bringToFront();\r\n      headIndicator.bringToFront();\r\n      headIndicator.position = headCell.position;\r\n      trailStuff.deadSymbolHead?.bringToFront();\r\n    }\r\n  }\r\n}","export class Point {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = +x;\r\n        this.y = +y;\r\n    }\r\n\r\n    add(point) {\r\n        return new Point(this.x + point.x, this.y + point.y);\r\n    }\r\n}","import { Point } from \"./Point\";\r\n\r\nexport const Constants = {\r\n    colors: [\"#A72334\", \"#FC7A43\", \"#ECCF39\", \"#6FAF60\",\r\n        \"#02654B\", \"#188DBF\", \"#22379B\", \"#7209b7\",\r\n        \"#f72585\"],\r\n    MoveDirection: {\r\n        UP: new Point(0, -1),\r\n        DOWN: new Point(0, 1),\r\n        LEFT: new Point(-1, 0),\r\n        RIGHT: new Point(1, 0)\r\n    }\r\n}\r\n","export class Trail {\r\n    constructor(headPos, color, id, getMove) {\r\n        this.head = headPos;\r\n        this.tail = [];\r\n        this.color = color;\r\n        this.id = id;\r\n        this.getMove = getMove;\r\n        this.alive = true;\r\n        this.state = {};\r\n    }\r\n\r\n    applyMove(move) {\r\n        this.tail.push(this.head);\r\n        this.head = move;\r\n    }\r\n}","export class ColorExtensions {\r\n    static getRandomColorHex() {\r\n        const randomInt = (min, max) => {\r\n            return Math.floor(Math.random() * (max - min + 1)) + min;\r\n        };\r\n\r\n        function hslToHex(h, s, l) {\r\n            l /= 100;\r\n            const a = s * Math.min(l, 1 - l) / 100;\r\n            const f = n => {\r\n                const k = (n + h / 30) % 12;\r\n                const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n                return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\r\n            };\r\n            return `#${f(0)}${f(8)}${f(4)}`;\r\n        }\r\n        var h = randomInt(0, 360);\r\n        var s = randomInt(50, 100);\r\n        var l = randomInt(30, 70);\r\n\r\n        return hslToHex(h, s, l);\r\n    }\r\n}","import { Point } from \"./Point\";\r\nimport { Grid } from \"./Grid.Extensions\";\r\n\r\nexport class TrailMoveValidator {\r\n    static isValidMoveDir(grid, trail, moveDir, trails) {\r\n        if (!moveDir || moveDir.x == undefined || moveDir.y == undefined) {\r\n            return [false, [\"Error - moveDir is not a valid Point object. Killing trail. moveDir supplied:\", moveDir]];\r\n        }\r\n        if (!Object.keys(Constants.MoveDirection).map(key => Constants.MoveDirection[key]).some(x => moveDir.x == x.x && moveDir.y == x.y)) {\r\n            return [false, [\"Invalid move supplied! Killing trail. Move supplied: \", moveDir]];\r\n        }\r\n\r\n        let move = new Point(trail.head.x + moveDir.x, trail.head.y + moveDir.y);\r\n        if ((move.x < 0 || move.x >= grid.length) ||\r\n            (move.y < 0 || move.y >= grid[move.x].length)) {\r\n            return [false, [`%cTRAIL [${trail.id}] %ctried to escape the grid! They failed...`, 'color: ' + trail.color, 'color: auto']];\r\n        }\r\n        if (Grid.isOccupied(grid, move)) {\r\n            var otherTrailId = grid[move.x][move.y];\r\n            var otherTrail = trails.find(x => x.id == otherTrailId);\r\n            return [false, [`%cTRAIL [${trail.id}] %chit %cTRAIL [${otherTrail.id}]`, 'color: ' + trail.color, 'color: auto', 'color: ' + otherTrail.color]];\r\n        }\r\n        return [true];\r\n    }\r\n} ","import { Constants } from \"./models/Constants\";\r\nimport { Point as PaperPoint } from \"paper/dist/paper-core\";\r\nimport { Grid } from \"./models/Grid.Extensions\";\r\nimport { Trail } from \"./models/Trail\";\r\nimport { ColorExtensions } from \"./models/ColorExtensions\";\r\nimport { TrailMoveValidator } from \"./models/TrailMoveValidator\";\r\n\r\nexport class Engine {\r\n  constructor() {\r\n    window.Constants = Constants;\r\n    window.Point = PaperPoint;\r\n    window.Grid = Grid;\r\n\r\n    this.reset();\r\n  }\r\n\r\n  log() {\r\n    if (!this.debug) {\r\n      return;\r\n    }\r\n\r\n    console.log(...arguments);\r\n  }\r\n\r\n  reset() {\r\n    this.debug = true;\r\n    this.expired = false;\r\n    this.path = null;\r\n    this.point = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.grid = undefined;\r\n    this.trails = [];\r\n    this.gridWidth = 10;\r\n    this.colorIndex = 0;\r\n    this.winners = [];\r\n    this.createGrid();\r\n  }\r\n\r\n  get allBotsDead() {\r\n    return this.trails.length && this.trails.every(x => !x.alive);\r\n  }\r\n\r\n  createGrid() {\r\n    this.grid = [];\r\n    for (var x = 0; x < this.gridWidth; x++) {\r\n      this.grid[x] = [];\r\n      for (var y = 0; y < this.gridWidth; y++) {\r\n        this.grid[x].push(undefined);\r\n      }\r\n    }\r\n  };\r\n\r\n  parseRawJsIntoGetMoveFunction(raw_ai_js) {\r\n    let usrGetMove = new Function('return getMove; ' + raw_ai_js)();\r\n    return usrGetMove;\r\n  }\r\n\r\n  addTrail(getMove_func, id, color, pos) {\r\n    if (this.expired) {\r\n      this.log(\"Engine has expired - please reset before addinga new bot.\");\r\n      return;\r\n    }\r\n    pos = pos || Grid.getRandomValidPos(this.grid);\r\n    if (!pos) {\r\n      return;\r\n    }\r\n    color = color || ColorExtensions.getRandomColorHex();\r\n\r\n    let idUniqueifier = 0;\r\n    let origId = id;\r\n    while (this.trails.some(x => x.id == id)) {\r\n      id = origId + idUniqueifier++;\r\n    }\r\n    // var id = this.trails.length;\r\n    var trail = new Trail(pos, color, id, getMove_func);\r\n    this.trails.push(trail);\r\n    this.setGridCellOwner(trail);\r\n  }\r\n\r\n  setGridCellOwner(trail) {\r\n    Grid.setOwner(this.grid, trail.head, trail.id);\r\n    //this.grid[trail.head.x][trail.head.y].id = trail.id;\r\n  }\r\n\r\n  determineWinners() {\r\n    if (this.trails.length < 1) {\r\n      return;\r\n    }\r\n\r\n    var pointMap = Grid\r\n      .flatten(this.grid)\r\n      .filter(x => Grid.isOccupied(this.grid, x.position))\r\n      .reduce((map, cur) => {\r\n        if (!map.has(cur.id)) {\r\n          map.set(cur.id, {\r\n            points: 0,\r\n            trail: this.trails.find(x => x.id == cur.id)\r\n          });\r\n        }\r\n\r\n        map.get(cur.id).points += 1;\r\n        return map;\r\n      }, new Map());\r\n\r\n    if (pointMap.size < 1) {\r\n      this.log(\"No winners??\");\r\n      return;\r\n    }\r\n\r\n    let winners = Array.from(pointMap.values())\r\n      .sort((a, b) => b.points - a.points);\r\n\r\n    this.log(\"\\n\\n\\n\");\r\n    this.log(\"#############################\");\r\n    this.log(\"##         WINNERS         ##\");\r\n    this.log(\"#############################\");\r\n    for (var winner of winners) {\r\n      let trail = winner.trail;\r\n      trail.points = winner.points;\r\n      this.log(`%c > %cTRAIL [${trail.id}] %c POINTS: ${trail.points}`, `color: auto`, `color: ${trail.color};`, `color: auto`);\r\n      this.winners.push(trail);\r\n    }\r\n\r\n    this.expired = true;\r\n  }\r\n\r\n  iterateTrails() {\r\n    for (let trail of this.trails.filter(x => x.alive)) {\r\n      try {\r\n        var moveDir = trail.getMove(\r\n          this.grid,\r\n          trail.head,\r\n          trail.id,\r\n          /* remove certain \"secrets\" from trails before passing to getMove: */\r\n          this.trails.map(t => ({ ...t, getMove: undefined, state: undefined })),\r\n          trail.state\r\n        );\r\n      } catch (ex) {\r\n        this.log(\"Error executing script: \", ex, trail.getMove);\r\n      }\r\n\r\n      let [isValidMove, logMsgs] = TrailMoveValidator.isValidMoveDir(this.grid, trail, moveDir, this.trails);\r\n      if (!isValidMove) {\r\n        trail.alive = false;\r\n        this.log(...logMsgs);\r\n        continue;\r\n      }\r\n\r\n      let movePos = trail.head.add(moveDir);\r\n      trail.nextMovePos = movePos;\r\n    }\r\n    let aliveTrails = this.trails.filter(x => x.alive);\r\n    for (let i = 0; i < aliveTrails.length; i++) {\r\n      let trail1 = aliveTrails[i];\r\n      for (let j = i + 1; j < aliveTrails.length; j++) {\r\n        let trail2 = aliveTrails[j];\r\n        if (trail1.nextMovePos.x == trail2.nextMovePos.x\r\n          && trail1.nextMovePos.y == trail2.nextMovePos.y) {\r\n          trail1.alive = false;\r\n          trail2.alive = false;\r\n          this.log(`TRAIL [${trail1.id}] and TRAIL [${trail2.id}] tried to occupy the same space: (${trail1.nextMovePos.x},${trail1.nextMovePos.y})`);\r\n        }\r\n      }\r\n      let movePos = trail1.nextMovePos;\r\n      trail1.nextMovePos = undefined;\r\n      if (!trail1.alive) {\r\n        continue;\r\n      }\r\n      trail1.applyMove(movePos);\r\n      this.setGridCellOwner(trail1);\r\n    }\r\n  }\r\n\r\n  step() {\r\n    if (!this.expired && !this.allBotsDead) {\r\n      this.iterateTrails();\r\n    }\r\n    if (!this.expired && this.allBotsDead) {\r\n      this.determineWinners();\r\n    }\r\n  }\r\n}","export default \"// Clockwise bot - Example:\\nfunction getMove(grid, headPos, myTrailId, trails, state) {\\n  var dir = Constants.MoveDirection;\\n  if (isValidMove(grid, headPos, dir.RIGHT)) return dir.RIGHT;\\n  if (isValidMove(grid, headPos, dir.DOWN)) return dir.DOWN;\\n  if (isValidMove(grid, headPos, dir.LEFT)) return dir.LEFT;\\n  if (isValidMove(grid, headPos, dir.UP)) return dir.UP;\\n  return dir.RIGHT;\\n}\\n\\nfunction isValidMove(grid, headPos, move) {\\n  var nextPos = new Point(headPos.x + move.x, headPos.y + move.y);\\n  var isOccupied = Grid.isOccupied(grid, nextPos);\\n  return isOccupied == false; // this works because isOccupied is \\n  //    exactly false if the square is free, \\n  //    true if occupied, \\n  //    undefined if out of bounds\\n}\";","export default \"// minimax bot - ASW:\\nfunction getMove(grid, headPos, myTrailId, trails, state) {\\n  var dir = Constants.MoveDirection;\\n  let opponent = trails.find(x => x.id != myTrailId);\\n  let bestScore = calculateScore(grid, headPos);\\n  let validMoves = getAdjMoves(grid, headPos);\\n  let move = validMoves[0] || dir.UP;\\n\\n  for (var validMove of validMoves) {\\n    //console.log(\\\"tesing move:\\\", validMove, \\\" head pos\\\", headPos, \\\" opp: \\\", opponent.head);\\n    let gridCopy = Grid.copy(grid); //Grid.setOwner(gridCopy, headPos, myTrailId);\\n\\n    Grid.setOwner(gridCopy, headPos.add(validMove), myTrailId);\\n\\n    if (distance(headPos.add(validMove), opponent.head) <= 1.1) {\\n      //console.log(\\\"********************* Alert!\\\");\\n      continue;\\n    }\\n\\n    let score = minimax(gridCopy, headPos.add(validMove), myTrailId, opponent.head, opponent.id, 3, trails, true);\\n\\n    if (score > bestScore) {\\n      //console.log(\\\"picking move \\\", validMove, \\\" for score: \\\", score);\\n      bestScore = score;\\n      move = validMove;\\n    }\\n  } //console.log(\\\"Returning move:\\\", move);\\n  //console.log(\\\"======================\\\");\\n\\n\\n  return move;\\n  if (isValidMove(grid, headPos, dir.RIGHT)) return dir.RIGHT;\\n  if (isValidMove(grid, headPos, dir.DOWN)) return dir.DOWN;\\n  if (isValidMove(grid, headPos, dir.LEFT)) return dir.LEFT;\\n  if (isValidMove(grid, headPos, dir.UP)) return dir.UP;\\n  return dir.RIGHT;\\n}\\n\\nfunction distance(pos1, pos2) {\\n  let dis = Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\\n  return dis;\\n}\\n\\nfunction minimax(grid, headPos, myId, opponentHeadPos, opponentId, depth, trails, maximizing = true) {\\n  // TODO: Check for winner first?\\n  if (maximizing) {\\n    if (depth < 0) return calculateScore(grid, myId);\\n    let bestScore = -Infinity; //console.log('.'.repeat(2 - depth) + \\\"[MAX] headPos: \\\", headPos, ' opp: ', opponentHeadPos);\\n\\n    let validMoves = getAdjMoves(grid, headPos);\\n\\n    for (let move of validMoves) {\\n      //console.log('.'.repeat(2 - depth) + '[MAX] test move', move, \\\" head pos \\\", headPos.add(move), \\\" opponent: \\\", opponentHeadPos);\\n      let dis = distance(headPos.add(move), opponentHeadPos);\\n\\n      if (dis < 1) {\\n        if (calculateScore(grid, myId) <= calculateScore(grid, opponentId)) {\\n          //console.log(\\\"[MAX] potential death\\\", headPos.add(move), opponentHeadPos);\\n          bestScore -= 2;\\n        }\\n      }\\n\\n      let gridCopy = Grid.copy(grid);\\n      let score = minimax(gridCopy, headPos.add(move), myId, opponentHeadPos, opponentId, depth - 1, trails, false);\\n      Grid.setOwner(gridCopy, headPos.add(move), myId);\\n      bestScore = Math.max(score, bestScore); //console.log('MAX best score ', bestScore);\\n    }\\n\\n    return bestScore;\\n  } else {\\n    if (depth < 0) return calculateScore(grid, myId);\\n    let bestScore = Infinity; //console.log('.'.repeat(2 - depth) + \\\"[min] headPos: \\\", headPos, ' opp: ', opponentHeadPos);\\n\\n    let validMoves = getAdjMoves(grid, opponentHeadPos);\\n\\n    if (validMoves.length < 1) {\\n      //console.log(\\\"[min] no valid moves headPos: \\\", headPos, \\\" opponentHeadPos: \\\", opponentHeadPos);\\n      return 0;\\n    }\\n\\n    for (let move of validMoves) {\\n      //console.log('.'.repeat(2 - depth) + '[min] test move', move, \\\" head pos \\\", headPos, \\\" opp: \\\", opponentHeadPos.add(move));\\n      let dis = distance(headPos, opponentHeadPos.add(move));\\n\\n      if (dis <= 1.1) {\\n        // if dis == 1 then we are adj and cannot die.\\n        if (calculateScore(grid, myId) >= calculateScore(grid, opponentId)) {\\n          //console.log(\\\"[MIN] potential death\\\", headPos, opponentHeadPos.add(move));\\n          bestScore += 1;\\n          break;\\n        }\\n      }\\n\\n      let gridCopy = Grid.copy(grid);\\n      Grid.setOwner(gridCopy, opponentHeadPos.add(move), opponentId);\\n      let score = minimax(gridCopy, headPos, myId, opponentHeadPos.add(move), opponentId, depth - 1, trails, true);\\n      bestScore = Math.min(score, bestScore); //console.log('min best score ', bestScore);\\n    }\\n\\n    return bestScore;\\n  }\\n}\\n\\nfunction calculateScore(grid, id) {\\n  let score = Grid.flatten(grid).filter(x => x.id == id).length; //console.log(`[${id}] score: ${score}`);\\n\\n  return score;\\n}\\n\\nfunction getAdjMoves(grid, headPos) {\\n  var dir = Constants.MoveDirection;\\n  let adj = [];\\n  if (isValidMove(grid, headPos, dir.UP)) adj.push(dir.UP);\\n  if (isValidMove(grid, headPos, dir.RIGHT)) adj.push(dir.RIGHT);\\n  if (isValidMove(grid, headPos, dir.DOWN)) adj.push(dir.DOWN);\\n  if (isValidMove(grid, headPos, dir.LEFT)) adj.push(dir.LEFT);\\n  return adj;\\n}\\n\\nfunction isValidMove(grid, headPos, move) {\\n  var nextPos = new Point(headPos.x + move.x, headPos.y + move.y);\\n  var isOccupied = Grid.isOccupied(grid, nextPos);\\n  return isOccupied == false; // this works because isOccupied is \\n  //    exactly false if the square is free, \\n  //    true if occupied, \\n  //    undefined if out of bounds\\n}\\n\\nfunction isValidMove2(grid, headPos, move) {\\n  var nextPos = new Point(headPos.x + move.x, headPos.y + move.y);\\n  var isOccupied = Grid.isOccupied(grid, nextPos);\\n  return isOccupied == false; // this works because isOccupied is \\n  //    exactly false if the square is free, \\n  //    true if occupied, \\n  //    undefined if out of bounds\\n}\";","import { render } from \"./tron-box.vue?vue&type=template&id=912045a4&scoped=true\"\nimport script from \"./tron-box.vue?vue&type=script&lang=js\"\nexport * from \"./tron-box.vue?vue&type=script&lang=js\"\n\nimport \"./tron-box.vue?vue&type=style&index=0&id=912045a4&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/runner/work/tronbox/tronbox/spa/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-912045a4\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=90e1d654\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/tronbox/tronbox/spa/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue';\nimport App from './App.vue'\n\nimport 'bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport '@/styles/index.scss';\n\ncreateApp(App)\n    .mount('#app');\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktronbox\"] = self[\"webpackChunktronbox\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(9235); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_TronBox","class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_5","id","$props","ref","width","height","onMousemove","$options","onMouseenter","onMouseleave","_hoisted_8","_hoisted_9","_Fragment","_renderList","_ctx","winners","winner","key","style","color","_toDisplayString","points","onClick","$event","type","posTxt","_hoisted_14","js","_hoisted_15","Grid","constructor","grid","pos","length","x","y","undefined","map","col","cell","position","Point","flatMap","openSpots","flatten","filter","isOccupied","Math","floor","random","gridPosition","console","log","copy","paper","require","Renderer","canvasId","this","reset","project","activeLayer","removeChildren","projects","forEach","remove","setup","trailStuff","colors","colorIndex","convertMousePosToGridPos","mousePos","intersectingCell","find","hitTest","render","engine","trails","expired","cellWidth","el","Path","Rectangle","Size","strokeColor","fillColor","trail","point","tail","trailCell","strokeWidth","shadowColor","shadowBlur","wireframe","head","Color","segments","at","add","headCell","bringToFront","headIndicator","Circle","alive","deadSymbolHead","triangle","RegularPolygon","Constants","MoveDirection","UP","DOWN","LEFT","RIGHT","Trail","headPos","getMove","state","applyMove","move","push","ColorExtensions","randomInt","min","max","hslToHex","h","s","l","a","f","n","k","round","toString","padStart","TrailMoveValidator","moveDir","Object","keys","some","otherTrailId","otherTrail","Engine","window","PaperPoint","debug","arguments","path","gridWidth","createGrid","allBotsDead","every","parseRawJsIntoGetMoveFunction","raw_ai_js","usrGetMove","Function","addTrail","getMove_func","getRandomColorHex","idUniqueifier","origId","setGridCellOwner","determineWinners","pointMap","reduce","cur","has","set","get","Map","size","Array","from","values","sort","b","iterateTrails","t","ex","isValidMove","logMsgs","isValidMoveDir","movePos","nextMovePos","aliveTrails","i","trail1","j","trail2","step","name","props","String","required","data","botA","minimax","prevColor","botB","clockwiseExampleAi","renderer","paused","mouseIsOnCanvas","lastKeyPressed","computed","pauseBtnText","showWinnerText","mounted","addEventListener","keyDown","keyUp","start","methods","convertPosTxtToPoint","m","match","addBot","bot","clear","randomizeBots","randomizeBot","addInitialTrails","rndNum","loop","togglePause","canvasMouseEnter","canvasMouseLeave","addBotAtMousePos","gridPos","keyEvent","mouseMove","event","rect","$refs","canvas","getBoundingClientRect","clientX","left","clientY","top","setTimeout","async","BENCHMARK_MAX_ITERATIONS","maxIterations","tempBot","Promise","resolve","wins","winsA","winsB","winsApercent","toFixed","winsBpercent","__exports__","components","TronBox","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","splice","r","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}